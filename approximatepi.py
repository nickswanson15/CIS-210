'''
Approx Pi

CIS  210 Project 3-2 Approx pi

Author: Nick Swanson

Credits: N/A

approximating pi using the Monte Carlo algorithm
'''

import math
import random

def montepi(numDarts):

    '''docstring
        -   Integer > float  #type contract

        -  Returns the aproximate value of pi that is generated by the function.

        -   montepi(100)    #examples of use
        >>
        3.08
        montepi(100000)
        >>
        3.143072
        montepi(10000000)
        >>
        3.1418752
    '''
    incircle = 0

    for i in range(numDarts):
        x = random.random()
        y = random.random()
        r = 1

        if isincircle(x, y, r) == True:
    
            incircle += 1

    pi = ((incircle / numDarts) * 4)
    return pi

def isincircle(x, y, r):

    '''docstring
        -   Integer > boolean  #type contract

        -  Determines if a point(x,y) is inside a circle centered at (0, 0) with radius r and returns True if it is and False if it is not.

        -  isincircle(0, 0, 1)    #examples of use
        >>
        true
        isincircle(.5, .5, 1)
        >>
        true
        isincircle(1, 2, 1)
        >>
        false
    '''
    d = math.sqrt(x**2 + y**2)
    if d < r:
        return True
    else:
        return False

def reportpi(numDarts, approxpi):
    '''docstring
        -   Integer > None  #type contract

        -  computes the difference between the approximate value for pi generated by  the Monte Carlo simulatiom and the math.pi value in the library, then prints the percentage error and returns None. is and False if it is not.

        -  reportPi(1000, mypi)    #examples of use
        >>
        my value: 3.104
        math lib value: 3.141592653589793
        this is a 1.2 percent error
    '''

    p = round(abs((approxpi - math.pi) / math.pi) * 100, 2)

    print("My value:  "  + str(approxpi))
    print("Math lib value: " + str(math.pi))
    print("This is a " +  str(p) + " percent error")

    return None

def main():
    '''docstring
        -   None > None  #type contract

        -  Executes three examples of montepi, calls reportpi for each  call to montepi. returns  none.

        -  main()    #examples of use
        >>
        k = 1000
        mypi = montepi(k)
        reportpi(k, mypi)
    '''
    
    k = 10
    mypi = montepi(k)
    reportpi(k, mypi)
    k = 100
    mypi = montepi(k)
    reportpi(k, mypi)
    k = 1000
    mypi = montepi(k)
    reportpi(k, mypi)

    return None

main()
